@import "../../styles/functions.scss";
@import "../../styles/variables.scss";
@import "../../styles/mixins.scss";
.root {
    @media screen and (max-width: 750px) {
        width: 100%;
        padding-top: space(2);
    }
    form {
        display: flex;
    }
    input {
        background-color: $inputColor;
        border: none;
        padding: 8px;
        font-size: 14px;
        margin-right: space(2);
        width: 120px;
        box-shadow: 0px 4px 4px rgb(0 0 0 / 25%);
        &:focus {
            box-shadow: inset 0px 0px 0px 1px $pink;
            outline: none;
        }
    }

    .phoneInput {
        width: 140px;
    }
}

.rootInModal {
    max-width: 250px;
    background-color: $cardGrey;
    form {
        display: flex;
        flex-direction: column;
        padding: space(4);
        padding-bottom: space(1);
        gap: 20px;
        button {
            margin-top: space(2);
            align-self: center;
        }
    }

    input,
    textarea {
        background-color: $inputColor;
        border: none;
        padding: 8px;

        font-size: 14px;
        &:focus {
            box-shadow: inset 0px 0px 0px 1px $pink;
            outline: none;
        }
    }

    textarea {
        resize: none;
    }
}

.button {
    height: fit-content;
    border: none;
    width: 120px;
    background-color: $aquaBlue;
    color: #fff;
    padding: 8px;
    font-size: 15px;
    text-transform: uppercase;
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
    cursor: pointer;
    &:hover {
        box-shadow: 0px 5px 5px rgba(0, 0, 0, 0.2);
    }
    &:enabled:active {
        box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.4);
        transition: all 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
    }

    &:disabled {
        background-color: $cardGrey;
        cursor: not-allowed;
    }

    @media screen and (max-width: 900px) {
        width: max-content;
    }
    @media screen and (max-width: 400px) {
        font-size: 13px;
    }
}

@mixin labelFocusFixed {
    transform: translateY(-13px) scale(0.7);
    transition: all 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
    background: linear-gradient(180deg, transparent 0, $inputColor 13px, $inputColor 14px, $inputColor 26px);
    color: $pinkB;
}

.inputContainer {
    position: relative;
    z-index: 2;
    display: flex;
    flex-direction: column;
    label {
        pointer-events: none;
        padding-left: 8px;
        padding-right: 8px;
        height: 26px;
        background-color: $inputColor;
        position: absolute;
        display: block;
        font-weight: 400;
        transform: translateX(6px) translateY(4px) scale(1);
        color: rgba(0, 0, 0, 0.4);
        transition: transform 0.4s cubic-bezier(0.075, 0.82, 0.165, 1);
    }
    input:focus + label {
        @include labelFocusFixed;
    }
    textarea:focus + label {
        @include labelFocusFixed;
    }

    .labelFixed {
        @include labelFocusFixed;
    }
}

.error {
    color: rgb(165, 49, 49);
    margin-top: 4px;
    font-size: 12px;
}

.policy {
    margin: 0;
    font-size: 12px;
    a {
        color: $pink;
    }
}



.checkBoxContainer {
    margin-top: space(1);


    input[type="checkbox"] {
        opacity: 0;
        position: absolute;
        cursor: pointer;
       
        &:hover + label::before {
            background-color: $pink;
        }
        &:checked + label::before{
            content: '\002714';
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: $pinkB;
            
        }
    }
    label {
        display: flex;
        align-items: center;    
        cursor: pointer;
        &:hover::before {
            background-color: $pink;
        }
    }

    label:before {
        content: "";
        min-width: 18px;
        min-height: 18px;
        border-radius: 0.2em;
        border: 0.05em solid black;
        margin-right: 0.5em;
    }
}

.checkbox{
    color: #fff;
}